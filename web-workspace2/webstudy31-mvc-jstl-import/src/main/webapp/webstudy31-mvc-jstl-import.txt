ㅁ 전체 구성
1) DB modeling : ERD (src\main\resources)
2) SQL DDL
3) Application modeling : Class diagram (src\main\resources)

ㅁ 기본 환경설정
	* WEB-INF\lib(jstl > jstl이용, tomcat > 단위테스트 (application 실행))
	* org.kosta.myproject.model > DataSourceManager(dbcp)
	* org.kosta.myproject.controller > FrontControllerServlet, HandlerMapping, CheckLoginInterceptor, Controller
	
ㅁ requirements
	사원수 출력
	* 최초 index.jsp 실행시 총사원수(3명) 정보가 출력되어야 한다.
	* 총 사원수는 DB에 저장되어 조회할 수 있어야 한다.
	* jsp forward action tag를 활용, Controller를 실행 및 model과 연동하여 view에 출력한다.
		ㄴ 말 그대로, 특정 jsp 파일을 그대로 forward하여 해당 jsp파일을 그대로 보여준다.
		ㄴ index.jsp -> forward:jsp -> home.jsp
	
	..etc.

ㅁ view 구조에서 동일한 template(html tag, css, javascript 등)를 적용
	* 이러한 반복적이고 일괄적 template을 적용하기 위해 layout.jsp를 설정하였다.
		ㄴ 이런 중복 작업을 피하고 효율적으로 view 구현을 하기 위한 방안이 필요
		ㄴ main ui
	* 내부적으로 c:import(jstl)를 통해 호출되는 sub ui는 기본적으로 controller에서 url 변수에 입력하여 전달한다.
		ㄴ 동적으로 컨텐츠 영역을 설정해줄 수 있다.
	* view에서 단독 view를 제외하고는, controller를 호출한다.
	
ㅁ view에서 사용하는 url path
	* ${pageContext.request.contextPath} -> 기본 경로에 대해서 별도 설정이 필요한 경우