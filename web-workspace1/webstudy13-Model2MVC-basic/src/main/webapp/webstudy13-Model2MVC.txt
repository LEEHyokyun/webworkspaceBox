ㅁ 웹개발 변천사
	ㅁ 웹개발 초기 방식 - Model1
		* JSP - Database, jsp 상에서 db와 연동하는 구조
		* 기존 jdbc 연동설정을 할때마다 작성해주는 것과 달리, Model1을 적용하여 개발 생산성 및 유지보수성을 향상시켰다.
		* SW Architecture, 소프트웨어 아키텍쳐(설계구조)는 소프트웨어 	구성 요소들 사이의 관계를 표현한다.
			ㄴ SW 설계와 업데이트를 control하는 지침과 원칙.
	※ Model1
		ㅁ 웹어플리케이션 설계구조의 하나.
		ㅁ JSP --- Java Component(DAO/VO)	--- DB
			ㄴ Java component를 Java Bean이라고도 함(*Component, 독립적인 기능단위를 이룰때)
			ㄴ 그러한 Bean을 제공하기 위한 기본요소를 제공
			* JSP : Client의 request를 분석, Java Component(Beans)와 연동하여 적절한 결과를 client에게 response
			* Java Component(Beans) : Database Access Logic, Business Logic 담당
		ㅁ 설정은 인터페이스로 한번에, DAO로부터 count value를 가져오는 방식으로 코드 간결화
	
	ㅁ 웹개발 개선 방식 - Model2
		* Model2 Architecture MVC, Model2 설계방식의 근간을 이루는 디자인 패턴
		* 웹 어플리케이션 설계 방식을 Web MVC라 지칭한다.
		ㅁ Web MVC, web application 설계방식의 하나로, Model-view-Controller 영역으로 분리해서 설계를 구현하는 것을 말한다.
			* Model : Java Component(Bean) -> DAO/Service/VO 등으로 data access 및 buseiness logic을 담당한다.
			* View : JSP 담당, client에게 응답하기 위한 동적 웹페이지
			* Controller : Servlet 담당, 웹 어플리케이션의 제어가 client의 요청을 분석하여, 
							Model과 연동하여 적절한 이동방식(forward/redirect)에 따라 해당 View도 같이 제어하고 화면에 응답하도록 한다.
			* 이동방식 forward와 redirect (servlet에서 View인 JSP를 제어방식으로 이동시키는, 전달하는 방식)
				ㄴ View -- Controller -- Model -- DB
				ㄴ 결합도는 낮추고 유지보수성은 높아진다!
			* client -> controller -> model(DAO) -> DB
			  DB -> model(VO) -> servlet -> forward/redirect -> View
			  	ㄴ forward/redirect : controller를 통해 view를 호출 및 전달할때 / servlet이 jsp를 호출할때
			  	ㄴ Controller에게 req 요청, 그 후 controller가 view를 전달하는가 / update를 위해 model로 전달하는가
			
ㅁ forward 전달 방식
	ㅁ request, response가 유지되면서 제어가 이동되는 방식
	ㅁ Web container 상에서 이동되므로 client에서는 이 흐름 자체를 볼 수는 없다(url pattern 변화없음)
		ㄴ client에서 재요청할경우, req/res가 그대로 유지(즉 req 내장 data 유지)되므로 기존 동작 반복
	ㅁ 주로 정보조회시 사용되는 controller - view 전달방식이다.
		ㄴ Model의 logic 결과를 req에 저장(setAttribute), 이때 req에 내장된 data는 service 메소드 종료시(jsp가 사용자에게 res로 응답할때) 사라진다.
		ㄴ view는 client에게 응답시(res), 정보를 res로 반환받고 이를 화면에 출력(전달)한다.
			ㄴ getRequestDispatcher.forward

ㅁ redirect 전달 방식
	ㅁ 응답시 client에게 이동할 url을 지정해주어, client가 이동하게하는 방식
	ㅁ 기존 req, res가 유지되지 않는다.
	ㅁ 서버 상태변경(insert, update, delete 등)에 적합한 이동 방식